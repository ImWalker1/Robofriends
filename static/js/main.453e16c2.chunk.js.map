{"version":3,"sources":["components/card.js","components/cardlist.js","components/searchbox.js","containers/scroll.js","containers/app.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","seatchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","console","log","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAfF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAC3B,OAEC,sBAAKC,UAAU,kDAAf,UACC,qBAAKC,IAAI,SAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACC,mCAAMF,KACN,kCAAKC,YCaMK,EAnBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAElB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACrB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHdS,SCIKC,EAZG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCFDI,G,MAPD,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,MAAOC,OAAO,SAAvD,SACCJ,EAAMK,aCsDMC,E,kDAlDd,aAAc,IAAD,8BACZ,gBAiBDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,QACzCC,QAAQC,IAAIN,EAAMG,OAAOC,QAlBzB,EAAKG,MAAM,CACV1B,OAAQ,GACRqB,YAAY,IAJD,E,qDAOb,WAAqB,IAAD,OAClBM,MAAM,8CACLC,MAAK,SAAAC,GACL,OAAOA,EAASC,UAGhBF,MAAK,SAAAG,GACL,EAAKX,SAAS,CAACpB,OAAO+B,S,oBAYzB,WACC,MAA8BC,KAAKN,MAA5B1B,EAAP,EAAOA,OAAQqB,EAAf,EAAeA,YACTY,EAAiBjC,EAAOkC,QAAO,SAAAC,GACpC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAShB,EAAYe,kBAEtD,OAAKpC,EAAOsC,OAMX,sBAAK1C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAgB0B,KAAKd,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAASiC,SATd,oBAAIrC,UAAU,KAAd,yB,GAjCQ2C,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.453e16c2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, id}) =>{\r\n\treturn (\r\n\r\n\t\t<div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5'> \r\n\t\t\t<img alt='robots'src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2> {name}</h2>\r\n\t\t\t\t<p> {email}</p>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './card'\r\n\r\nconst CardList = ({robots}) =>{\r\n\t \r\n\treturn (\r\n\t\t<div>  \r\n\t\t    {\r\n\t\t    \trobots.map((user, i) =>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\tname = {robots[i].name} \r\n\t\t\t\t\temail = {robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t})\r\n\t\t    }\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default CardList","import React from 'react'\r\n\r\n\r\nconst SearchBox = ({seatchfield, searchChange})=>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default SearchBox","import React from 'react';\r\nconst Scroll =(props) =>{\r\n\treturn (\r\n\t\t<div style={{overflowY:'scroll', border: '1px', height:'750px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/cardlist';\r\n//import {robots} from './robots';\r\nimport SearchBox from '../components/searchbox'\r\nimport './app.css'\r\nimport Scroll from './scroll'\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response=>{\r\n\t\t\t\treturn response.json();\r\n\r\n\t\t\t})\r\n\t\t\t.then(users =>{\r\n\t\t\t\tthis.setState({robots:users});\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\tonSearchChange = (event)=>{\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\tconsole.log(event.target.value)\r\n\t\t\r\n\t\t\r\n\t\t}\r\n\t\r\n\r\n\trender(){\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\tif (!robots.length){\r\n\t\t\treturn <h1 className='tc'>Loading</h1>;\r\n\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>ROBOFRIENDS</h1>\r\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots ={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/app.js'\n//import Card from './card.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n//import {robots} from './robots.js'\nReactDOM.render(\n  <App />\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}